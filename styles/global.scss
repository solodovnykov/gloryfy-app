// reset
@import "./Reset.module.scss";

// constants
@import "./Constants.module.scss";

* {
  box-sizing: border-box;
}

body {
  background-color: $main-bg-color;
  font-family: "SFProText", sans-serif;
  font-weight: 400;
  font-size: 16px;
  position: relative;
  overflow-x: hidden;
  font-smooth: always;

  &::after {
    content: "";
    width: 200vw;
    height: 220vh;
    background-image: url("/images/grain.png");
    position: fixed;
    top: -50%;
    left: -50%;
    z-index: 15;
    background-repeat: repeat;

    pointer-events: none;
    animation: grain 1.5s steps(6) infinite;
    overflow: hidden;
    opacity: 0.5;
  }

  &::before {
    content: "";
    width: 592px;
    height: 328px;
    background-image: url("/bg/3.png");
    background-repeat: no-repeat;
    bottom: 0;
    right: -100px;
    position: fixed;
    mix-blend-mode: lighten;
    background-size: 60%;
    background-position: bottom;
    transition: .2s all ease-in-out;

    @media (max-width: 1000px) {
      background-size: 50%;
      right: -250px;
    }
    @media (max-width: 700px) {
      background-size: 30%;
      right: -250px;
    }
  }
}

// fonts
@font-face {
  font-family: "SFProText";
  src: url("../fonts/SF-Pro-Text-Light.otf");
  sc: local("SF-Pro-Text-Light"), local("SF-Pro-Text-Light"),
    url("../fonts/SF-Pro-Text-Light.otf") format("opentype");
  font-weight: 300;
  font-style: normal;
}

@font-face {
  font-family: "SFProText";
  src: url("../fonts/SF-Pro-Text-Regular.otf");
  sc: local("SF-Pro-Text-Regular"), local("SF-Pro-Text-Regular"),
    url("../fonts/SF-Pro-Text-Regular.otf") format("opentype");
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: "SFProText";
  src: url("../fonts/SF-Pro-Text-Medium.otf");
  sc: local("SF-Pro-Text-Medium"), local("SF-Pro-Text-Medium"),
    url("../fonts/SF-Pro-Text-Medium.otf") format("opentype");
  font-weight: 500;
  font-style: normal;
}

@font-face {
  font-family: "Gilroy";
  src: url("../fonts/Gilroy-Bold.ttf");
  sc: local("SF-Pro-Text-Medium"), local("Gilroy-Bold"),
    url("../fonts/Gilroy-Bold.ttf") format("truetype");
  font-weight: 700;
  font-style: normal;
}

.container-global {
  max-width: 2000px;
  width: 100%;
  position: relative;
  overflow: hidden;
  margin: 0 auto;
}

.container {
  max-width: 900px;
  padding: 0 15px;
  width: 100%;
  margin: 0 auto;
  position: relative;
  overflow: hidden;
}

input[type="range"] {
  -webkit-appearance: none;
  background: #292a2d;
  border-radius: 10px;
}
input[type="range"]:focus {
  outline: none;
}
input[type="range"]::-webkit-slider-runnable-track {
  width: 100%;
  height: 8.4px;
  cursor: pointer;
}
input[type="range"]::-webkit-slider-thumb {
  height: 30px;
  width: 16px;
  border-radius: 10px;
  background: #505050;

  cursor: pointer;
  -webkit-appearance: none;
  margin-top: -11px;
}
input[type="range"]:focus::-webkit-slider-runnable-track {
}
input[type="range"]::-moz-range-track {
  width: 100%;
  cursor: pointer;
}
input[type="range"]::-moz-range-thumb {
  height: 30px;
  width: 16px;
  border-radius: 3px;

  cursor: pointer;
}
input[type="range"]::-ms-track {
  width: 100%;
  height: 8.4px;
  cursor: pointer;
  background: transparent;
  border-color: transparent;
  border-width: 16px 0;
  color: transparent;
}

input[type="range"]::-ms-thumb {
  height: 30px;
  width: 16px;
  border-radius: 3px;

  cursor: pointer;
}

@keyframes grain {
  0%,
  100% {
    transform: translate(0, 0);
  }
  10% {
    transform: translate(-5%, -10%);
  }
  30% {
    transform: translate(-3%, -15%);
  }
  50% {
    transform: translate(-12%, 9%);
  }
  70% {
    transform: translate(-9%, 4%);
  }
  90% {
    transform: translate(-1%, 7%);
  }
}

*::-webkit-scrollbar-track {
  background: transparent;
  width: 10px;
  background: #0c0c0c;
}

*::-webkit-scrollbar {
  width: 8px;
}

*::-webkit-scrollbar-thumb {
  border-radius: 10px;
  background: #dedede2e;
  opacity: 0.2;
  transition: all 0.2s ease-in-out;
}

*::-webkit-scrollbar-thumb:hover {
  background: #dedede2f;
  opacity: 0.3;
  transition: all 0.2s ease-in-out;
}
